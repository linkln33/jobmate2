// Assistant-related models to be added to schema.prisma

// Model for storing user's assistant preferences
model AssistantPreference {
  id                String   @id @default(uuid())
  userId            String   @unique
  isEnabled         Boolean  @default(true)
  proactivityLevel  Int      @default(2) // 1-3 scale: 1=minimal, 2=balanced, 3=proactive
  preferredModes    String[] // Array of preferred assistant modes
  dismissedSuggestions String[] // IDs of suggestions user has dismissed
  lastInteraction   DateTime?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relations
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Model for storing assistant interaction history
model AssistantMemoryLog {
  id                String   @id @default(uuid())
  userId            String
  mode              String   // Current assistant mode when interaction occurred
  interactionType   String   // "suggestion_shown", "suggestion_accepted", "suggestion_dismissed", "manual_query", etc.
  context           Json?    // Context data related to the interaction
  routePath         String?  // Route path where interaction occurred
  createdAt         DateTime @default(now())

  // Relations
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Model for storing assistant suggestions
model AssistantSuggestion {
  id                String   @id @default(uuid())
  userId            String
  mode              String   // Assistant mode that generated this suggestion
  title             String
  description       String
  actionType        String?  // "navigate", "form_fill", "search", "contact", etc.
  actionPayload     Json?    // Data needed to execute the action
  priority          Int      @default(2) // 1-3 scale: 1=low, 2=medium, 3=high
  status            String   @default("pending") // "pending", "shown", "accepted", "dismissed", "expired"
  expiresAt         DateTime?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relations
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Model for tracking assistant usage analytics
model AssistantAnalytics {
  id                String   @id @default(uuid())
  userId            String
  date              DateTime @default(now())
  totalInteractions Int      @default(0)
  suggestionsShown  Int      @default(0)
  suggestionsAccepted Int    @default(0)
  suggestionsDismissed Int   @default(0)
  manualQueries     Int      @default(0)
  modeChanges       Int      @default(0)
  timeSpentSeconds  Int      @default(0)
  mostUsedMode      String?

  // Relations
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, date])
}
